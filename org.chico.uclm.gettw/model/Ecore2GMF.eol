var palette = GmfTool!Palette.all.first();
var currentTools = palette.tools;

var toolGroupShapes = new GmfTool!ToolGroup;
toolGroupShapes.title = "Shapes";
toolGroupShapes.collapsible = true;
var toolGroupText = new GmfTool!ToolGroup;
toolGroupText.title = "Text";
toolGroupText.collapsible = true;
var toolGroupCustomElements = new GmfTool!ToolGroup;
toolGroupCustomElements.title = "Custom Elements";
toolGroupCustomElements.collapsible = true;
palette.tools.add(toolGroupShapes);
palette.tools.add(toolGroupText);
palette.tools.add(toolGroupCustomElements);

var toolGroupObjects = GmfTool!ToolGroup.all.selectOne(r|r.title = 'Objects');
var toolGroupConnections = GmfTool!ToolGroup.all.selectOne(r|r.title = 'Connections');

var ShapesObjects : Sequence = Sequence{"Rectangle","Rounded Rectangle","Ellipse","Triangle","Triangle Down", "Triangle Left",
	"Triangle Right", "Diamond", "Sep","Actor","Package"};
//var SociogramConnections : Sequence = Sequence{"Acting","Inheritance","Association"};
var TextObjects : Sequence = Sequence{"Text","Text w Indexes", "Text w Superscript", "Text w Subscript"};
//var LearningConnections : Sequence = Sequence{"Traceability","Sep","Enabling w/o Information","Enabling w Information","Choice","Concurrency"};
var CustomElementsObjects : Sequence = Sequence {"Picture","Shape","Link"};


objectsConnectionsToPalette(ShapesObjects, toolGroupShapes, true);
//objectsConnectionsToPalette(SociogramConnections, toolGroupSociogram, false);
objectsConnectionsToPalette(TextObjects, toolGroupText, true);
objectsConnectionsToPalette(CustomElementsObjects, toolGroupCustomElements, true);

delete toolGroupObjects;
delete toolGroupConnections;

operation objectsConnectionsToPalette(myseq: Sequence, mytg: GmfTool!ToolGroup, isObject: Boolean) {
	var toolEntry;
	for (o in myseq) {
		if (o.matches('Sep')) {
			mytg.tools.add(new GmfTool!PaletteSeparator);
		} else {
			if (isObject) {
				toolEntry = toolGroupObjects.tools.selectOne(r|r.title = o);
			} else {
				toolEntry = toolGroupConnections.tools.selectOne(r|r.title = o);
			}
			mytg.tools.add(toolEntry);
		}
	}
}